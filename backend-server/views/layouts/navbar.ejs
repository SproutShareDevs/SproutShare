<%-include('header');-%>
<nav>
   <ul>
      <a href="/ejs-testing/login" style="display:inline" class="loginLink">Login</a>
      <a href="/ejs-testing/logout" style="display:none" class="logoutLink">Logout</a>
      <a href="/ejs-testing/register" style="display:inline" class="registerLink">Register</a>
      <a href="/ejs-testing">Test Home</a>
      <a href="/ejs-testing/communityPosts" >Comm. Posts</a>
      <a href="/ejs-testing/exchangeListings">Ex. Listing</a>
      <a href="/ejs-testing/notifications">Notifications</a>
      <a href="/ejs-testing/forumPosts">Forum Posts</a>
      <a href="/ejs-testing/plants">Plants</a>
      <a href="/ejs-testing/userPlants" class="restrictedLink">User Plants</a>
      <a href="/ejs-testing/gardens">Gardens</a>
      <a href="/ejs-testing/sproutShareUsers">Users</a>
      <a href="/ejs-testing/weather">Weather</a>
   </ul>
   <div class="username-placeholder" style="display: none;"></div>
</nav>

<script>
   console.log(localStorage);
   //const ejsPageUrl = 'http://localhost:3000/ejs-testing';
   const usernameDisplay = document.querySelector('.username-placeholder');
   const username = localStorage.getItem('username');
   const loginLink = document.querySelector('.loginLink');
   const logoutLink = document.querySelector('.logoutLink');
   const registerLink = document.querySelector('.registerLink');
   const restrictedLink = document.querySelector('.restrictedLink');

   logoutLink.addEventListener('click', async function(event){
      event.preventDefault();
      await logoutHandler();

      logoutHandler().then(()=>{
         window.location.href = 'http://localhost:3000/ejs-testing/login/';
         localStorage.clear();
      })
   });

   restrictedLink.addEventListener('click', async function(event){
      if(localStorage.getItem('refreshToken') === null) return;
      event.preventDefault();
      await authorizeUser();
      authorizeUser()
      .then(res => res.text())
      .then(htmlStr => {
         document.open();
         document.write(htmlStr);
         document.close();
      })
   })

   async function logoutHandler(){
      const response = await fetch('http://localhost:3000/ejs-testing/logout/', {
				method:'POST',
				headers:{
					'Content-type':'application/json'
				},
				body: JSON.stringify({username:username})
			})
   }
   
   async function authorizeUser(){
      const fullLink = restrictedLink + '/'
      const response = await fetch(fullLink, {
         method:'GET',
         headers:{
            'Authorization': `Bearer ${localStorage.getItem('refreshToken')}`
         }
      });
      return response;
   }

   if(localStorage.getItem('refreshToken') !== null && username !== null){
      // user is already logged in, so remove the login button and register button
      loginLink.style.display = 'none';
      registerLink.style.display = 'none';
      // display the logout button
      logoutLink.style.display = 'inline';
      usernameDisplay.style.display = 'block';
      usernameDisplay.innerText = `user: ${username}`;
   }  
   else{
      loginLink.style.display = 'inline';
      logoutLink.style.display = 'none';
      registerLink.style.display = 'inline';
      usernameDisplay.innerText = '';
      usernameDisplay.style.display = 'none';
   }
   
   

</script>

